<diagram program="umletino" version="15.1"><zoom_level>10</zoom_level><help_text>Space for diagram notes
</help_text><element><id>UMLNote</id><coordinates><x>0</x><y>20</y><w>80</w><h>30</h></coordinates><panel_attributes>Legend
bg=pink</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>0</x><y>230</y><w>80</w><h>30</h></coordinates><panel_attributes>Class</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>0</x><y>180</y><w>80</w><h>30</h></coordinates><panel_attributes>Constant
bg=orange</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>0</x><y>130</y><w>80</w><h>30</h></coordinates><panel_attributes>AbstractClass
bg=blue</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>0</x><y>80</y><w>80</w><h>30</h></coordinates><panel_attributes>/Interface/
bg=green</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>430</x><y>430</y><w>200</w><h>130</h></coordinates><panel_attributes>SimpleCharStream
--
/int bufpos/
/int column/
/int line/
/char[] buffer/
--
/char readChar()/
/void ReInit(...)/</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>170</x><y>130</y><w>150</w><h>30</h></coordinates><panel_attributes>ParseException</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>170</x><y>180</y><w>270</w><h>170</h></coordinates><panel_attributes>[Parser]
--
/SimpleParserTokenManager token_source/
/SimpleCharStream jj_input_stream/
/Token token/
/Token jj_nt/
--
/void ReInit(...)/
/Token getNextToken()/
/Token getToken(int index)/
</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>330</x><y>20</y><w>250</w><h>80</h></coordinates><panel_attributes>[Parser]Constants
bg=green
--
int [RE] = 1; // RE
int DEFAULT = 0; // lexical state
String[] tokenImage // literal token values</panel_attributes><additional_attributes></additional_attributes></element><element><id>Relation</id><coordinates><x>370</x><y>90</y><w>100</w><h>110</h></coordinates><panel_attributes>lt=&lt;&lt;.</panel_attributes><additional_attributes>80;10;10;90</additional_attributes></element><element><id>UMLClass</id><coordinates><x>460</x><y>210</y><w>260</w><h>150</h></coordinates><panel_attributes>[Parser]TokenManager
--
/java.io.PrintStream debugStream/
/impleCharStream  input_stream/
/String[] lexStateNames/
/StringBuilder image/
--
/Token getNextToken()/
/void SwitchTo(int lexState)/
/void TokenLexicalActions(Token matchedToken)/</panel_attributes><additional_attributes></additional_attributes></element><element><id>Relation</id><coordinates><x>500</x><y>90</y><w>50</w><h>140</h></coordinates><panel_attributes>lt=&lt;&lt;.</panel_attributes><additional_attributes>10;10;30;120</additional_attributes></element><element><id>UMLClass</id><coordinates><x>170</x><y>410</y><w>200</w><h>170</h></coordinates><panel_attributes>Token
--
int kind
int beginLine
int beginColumn
int endLine
int endColumn
String image
Token next
Token specialToken
--
/newToken(int ofKind, String image)/
</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>560</x><y>130</y><w>150</w><h>30</h></coordinates><panel_attributes>TokenMgrError</panel_attributes><additional_attributes></additional_attributes></element><element><id>Relation</id><coordinates><x>310</x><y>340</y><w>210</w><h>110</h></coordinates><panel_attributes>lt=&lt;&lt;&lt;&lt;-</panel_attributes><additional_attributes>10;10;190;90</additional_attributes></element><element><id>Relation</id><coordinates><x>260</x><y>340</y><w>50</w><h>90</h></coordinates><panel_attributes>lt=&lt;&lt;&lt;&lt;-</panel_attributes><additional_attributes>30;10;10;70</additional_attributes></element><element><id>Relation</id><coordinates><x>570</x><y>350</y><w>40</w><h>100</h></coordinates><panel_attributes>lt=&lt;&lt;&lt;&lt;-</panel_attributes><additional_attributes>20;10;10;80</additional_attributes></element><element><id>UMLClass</id><coordinates><x>870</x><y>70</y><w>180</w><h>150</h></coordinates><panel_attributes>/Node/
bg=green
--
void jjtOpen()
void jjtClose()
void jjtSetParent(Node)
Node jjtGetParent()
void jjtAddChild(Node, int)
Node jjtGetChild(int)
int jjtGetNumChildren()
int getId()</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLNote</id><coordinates><x>170</x><y>30</y><w>80</w><h>30</h></coordinates><panel_attributes>JavaCC
bg=pink</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLNote</id><coordinates><x>750</x><y>30</y><w>80</w><h>30</h></coordinates><panel_attributes>JJTree
bg=pink</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>790</x><y>270</y><w>270</w><h>160</h></coordinates><panel_attributes>SimpleNode
--
Node parent
Node[] children
int id
Object value
[Parser] parser
--
void dump(String)
Object jjtAccept([Parser]Visitor, Object)
Object childrenAccept([Parser]Visitor, Object)</panel_attributes><additional_attributes></additional_attributes></element><element><id>Relation</id><coordinates><x>940</x><y>210</y><w>30</w><h>80</h></coordinates><panel_attributes>lt=&lt;&lt;.</panel_attributes><additional_attributes>10;10;10;60</additional_attributes></element><element><id>UMLClass</id><coordinates><x>1100</x><y>70</y><w>180</w><h>60</h></coordinates><panel_attributes>[Parser]TreeConstants
bg=green
--
int [Production]
String[] jjtNodeName</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>1100</x><y>160</y><w>220</w><h>240</h></coordinates><panel_attributes>JJT[Parser]State
--
List&lt;Node&gt; nodes
List&lt;Integer&gt; marks
int sp // number of nodes on stack
int mk // current mark
boolean node_created
--
Node rootNode()
void pushNode(Node)
Node popNode()
Node peekNode()
void openNodeScope(Node)
void closeNodeScope(Node, int)
void closeNodeScope(Node, boolean)
void clearNodeScope(Node)
int nodeArity()</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>1080</x><y>450</y><w>240</w><h>70</h></coordinates><panel_attributes>/[Parser]Visitor/
bg=green
--
Object visit(SimpleNode, Object)
Object visit(AST[Productiion], Object)</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>1080</x><y>580</y><w>240</w><h>60</h></coordinates><panel_attributes>[Parser]DefaultVisitor
--
Object defaultVisit(SimpleNode, Object)</panel_attributes><additional_attributes></additional_attributes></element><element><id>Relation</id><coordinates><x>1160</x><y>510</y><w>50</w><h>90</h></coordinates><panel_attributes>lt=&lt;&lt;.</panel_attributes><additional_attributes>30;10;10;70</additional_attributes></element><element><id>UMLClass</id><coordinates><x>780</x><y>510</y><w>230</w><h>60</h></coordinates><panel_attributes>AST[Production]
--
Object jjtAccept([Parser]Visitor, Object)</panel_attributes><additional_attributes></additional_attributes></element><element><id>Relation</id><coordinates><x>916</x><y>420</y><w>30</w><h>110</h></coordinates><panel_attributes>lt=&lt;&lt;-</panel_attributes><additional_attributes>10;10;10;90</additional_attributes></element></diagram>