spring.main.allow-bean-definition-overriding=true

# Nacos帮助文档: https://nacos.io/zh-cn/docs/concepts.html
# Nacos认证信息
spring.cloud.nacos.config.username=nacos
spring.cloud.nacos.config.password=nacos
spring.cloud.nacos.config.contextPath=/nacos
# 设置配置中心服务端地址
spring.cloud.nacos.config.server-addr=127.0.0.1:8848
# Nacos 配置中心的namespace。需要注意，如果使用 public 的 namcespace ，请不要填写这个值，直接留空即可
# spring.cloud.nacos.config.namespace=
spring.config.import=nacos:nacos-config-example.properties?refresh=true
# 应用服务 WEB 访问端口
server.port=8080

# Nacos帮助文档: https://nacos.io/zh-cn/docs/concepts.html
spring.application.name=nacosdiscovery-consumer
# Nacos认证信息
spring.cloud.nacos.discovery.username=nacos
spring.cloud.nacos.discovery.password=nacos
# Nacos 服务发现与注册配置，其中子属性 server-addr 指定 Nacos 服务器主机和端口
spring.cloud.nacos.discovery.server-addr=127.0.0.1:8848
# 注册到 nacos 的指定 namespace，默认为 public
spring.cloud.nacos.discovery.namespace=public

# ===
# # Sentinel 控制台地址
# spring.cloud.sentinel.transport.dashboard=localhost:8080
# # 取消Sentinel控制台懒加载
# # 默认情况下 Sentinel 会在客户端首次调用的时候进行初始化，开始向控制台发送心跳包
# # 配置 sentinel.eager=true 时，取消Sentinel控制台懒加载功能
# spring.cloud.sentinel.eager=true
# # 如果有多套网络，又无法正确获取本机IP，则需要使用下面的参数设置当前机器可被外部访问的IP地址，供admin控制台使用
# # spring.cloud.sentinel.transport.client-ip=

# # Nacos 服务发现与注册配置，其中子属性 server-addr 指定 Nacos 服务器主机和端口
# spring.cloud.nacos.discovery.server-addr=127.0.0.1:8848

# ===
# spring.datasource.name="storageDataSource"
# spring.datasource.type=com.alibaba.druid.pool.DruidDataSource
# spring.datasource.driver-class-name=com.mysql.jdbc.Driver
# spring.datasource.url=jdbc:mysql://xxx:3306/fescar?useSSL=false&serverTimezone=UTC
# spring.datasource.username=xxx
# spring.datasource.password=xxx
# spring.datasource.druid.max-active=20
# spring.datasource.druid.min-idle=2
# spring.datasource.druid.initial-size=2

# seata.enabled=true
# seata.service.vgroup-mapping=default
# seata.service.grouplist=127.0.0.1:8091
# seata.service.disable-global-transaction=false

## if use registry center
#seata.registry.type=nacos
#seata.registry.nacos.cluster=default
#seata.registry.nacos.server-addr=localhost
#
## if use config center
#seata.config.type=apollo
#seata.config.apollo.apollo-meta=http://192.168.1.204:8801
#seata.config.apollo.app-id=seata-server

# ===
# #下面这些内容是为了让MyBatis映射
# #指定Mybatis的Mapper文件
# mybatis.mapper-locations=classpath:mappers/*xml
# #指定Mybatis的实体目录
# mybatis.type-aliases-package=com.spike.cloud.alibaba.mybatis.entity

